version: '3'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    volumes:
      - ./postgresql:/docker-entrypoint-initdb.d
    depends_on:
      - backend
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=rent_agency

  backend:
    build:
      context: ./backend
    container_name: backend_container
    restart: always
    depends_on:
      - postgres
    environment:
      -DJANGO_DB_HOST=postgres
      -DJANGO_DB_PORT=5432
      # Otras variables de entorno

  frontend:
    build:
      context: ./frontend
    container_name: frontend_container
    restart: always
    depends_on:
      - backend
    command: npm start
    # Otras configuraciones para el servicio frontend

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4_container
    restart: always
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 5050
    # Otras configuraciones para el servicio pgadmin

  loadbalancer:
    image: nginx:latest
    container_name: nginx_container
    restart: always
    depends_on:
      - postgres
      - backend
      - frontend
      - pgadmin
    volumes:
      - ./loadbalancer/nginx.conf:/etc/nginx/nginx.conf
    command: nginx -g 'daemon off'
    ports:
      - "80:80"
    # Otras configuraciones para el servicio loadbalancer

networks:
  default:
    external:
      name: practica_net