version: '3'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    volumes:
      - ./postgresql/init.dump:/docker-entrypoint-initdb.d/init.sql
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  backend: 
    build:
      context: ./Django
      dockerfile: Dockerfile.django
    container_name: backend_container
    ports:
      - 8888:8888
    depends_on:
      - postgres

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4_container
    restart: always
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 5050:80

  frontend:
    build:
      context: ./React
      dockerfile: Dockerfile.react
    container_name: frontend_container
    ports:
      - "5173:5173"
    depends_on:
      - backend
    command: npm run dev
  
  loadbalancer:
    container_name: loadbalancer_container
    build:
      context: ./loadbalancer
      dockerfile: Dockerfile.loadbalancer
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
    volumes:
      - ./loadbalancer/nginx.conf:/etc/nginx/nginx.conf